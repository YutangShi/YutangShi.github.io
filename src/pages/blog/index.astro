---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';

// 獲取所有已發布的部落格文章
const allBlogPosts = await getCollection('blog', ({ data }) => {
  return data.draft !== true;
});

// 按發布日期排序
const posts = allBlogPosts.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

// 獲取所有類別和標籤
const categories = [...new Set(posts.map(post => post.data.category))];
const allTags = posts.flatMap(post => post.data.tags);
const tags = [...new Set(allTags)];

// 精選文章
const featuredPosts = posts.filter(post => post.data.featured);
---

<MainLayout 
  title="技術微光 - Allen Shi"
  description="每一篇文章，都是照亮 AI 與 IT 世界的小小光點"
>
  <div class="container">
    <!-- Page Header -->
    <header class="page-header">
      <h1>部落格</h1>
      <p>每一篇文章，都是照亮 AI 與 IT 世界的小小光點</p>
    </header>

    <!-- Featured Posts -->
    {featuredPosts.length > 0 && (
      <section class="featured-section">
        <h2>精選文章</h2>
        <div class="featured-posts">
          {featuredPosts.slice(0, 2).map((post) => (
            <article class="featured-post card">
              <div class="featured-image">
                <img src={post.data.heroImage || "/images/blog/default-post.svg"} alt={post.data.title} />
              </div>
              <div class="featured-content">
                <div class="post-meta">
                  <span class="post-category">{post.data.category}</span>
                  <time datetime={post.data.publishDate.toISOString()}>
                    {post.data.publishDate.toLocaleDateString('zh-TW')}
                  </time>
                </div>
                <h3>
                  <a href={`/blog/${post.id.replace(/\.md$/, '')}`}>{post.data.title}</a>
                </h3>
                <p>{post.data.description}</p>
                <div class="post-tags">
                  {post.data.tags.slice(0, 3).map((tag) => (
                    <span class="tag">#{tag}</span>
                  ))}
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>
    )}

    <div class="blog-layout">
      <!-- Sidebar -->
      <aside class="blog-sidebar">
        <!-- Search -->
        <div class="sidebar-widget">
          <h3>搜尋文章</h3>
          <div class="search-box">
            <input type="text" placeholder="搜尋..." id="search-input" />
            <button type="button" id="search-btn">🔍</button>
          </div>
        </div>

        <!-- Categories -->
        {categories.length > 0 && (
          <div class="sidebar-widget">
            <h3>文章分類</h3>
            <ul class="category-list">
              {categories.map((category) => {
                const count = posts.filter(post => post.data.category === category).length;
                return (
                  <li>
                    <a href={`/blog/category/${category}`}>
                      {category} <span class="count">({count})</span>
                    </a>
                  </li>
                );
              })}
            </ul>
          </div>
        )}

        <!-- Popular Tags -->
        {tags.length > 0 && (
          <div class="sidebar-widget">
            <h3>熱門標籤</h3>
            <div class="tag-cloud">
              {tags.slice(0, 15).map((tag) => (
                <a href={`/blog/tag/${tag}`} class="tag-link">#{tag}</a>
              ))}
            </div>
          </div>
        )}

        <!-- Recent Posts -->
        <div class="sidebar-widget">
          <h3>最新文章</h3>
          <ul class="recent-posts">
            {posts.slice(0, 5).map((post) => (
              <li>
                <a href={`/blog/${post.id.replace(/\.md$/, '')}`}>
                  <span class="recent-title">{post.data.title}</span>
                  <span class="recent-date">
                    {post.data.publishDate.toLocaleDateString('zh-TW')}
                  </span>
                </a>
              </li>
            ))}
          </ul>
        </div>
      </aside>
      
      <!-- Main Content -->
      <main class="blog-main">
        <!-- Category Filter -->
        {categories.length > 1 && (
          <div class="category-filter">
            <button class="filter-btn active" data-category="all">全部</button>
            {categories.map((category) => (
              <button class="filter-btn" data-category={category}>{category}</button>
            ))}
          </div>
        )}

        <!-- Posts Grid -->
        <div class="posts-grid">
          {posts.map((post) => (
            <article class="post-card card" data-category={post.data.category}>
              <div class="post-image">
                <img src={post.data.heroImage || "/images/blog/default-post.svg"} alt={post.data.title} />
              </div>
              <div class="post-content">
                <div class="post-meta">
                  <span class="post-category">{post.data.category}</span>
                  <time datetime={post.data.publishDate.toISOString()}>
                    {post.data.publishDate.toLocaleDateString('zh-TW')}
                  </time>
                </div>
                <h2>
                  <a href={`/blog/${post.id.replace(/\.md$/, '')}`}>{post.data.title}</a>
                </h2>
                <p>{post.data.description}</p>
                <div class="post-tags">
                  {post.data.tags.slice(0, 4).map((tag) => (
                    <span class="tag">#{tag}</span>
                  ))}
                </div>
                <div class="post-footer">
                  <span class="post-author">by {post.data.author}</span>
                  <a href={`/blog/${post.id.replace(/\.md$/, '')}`} class="read-more">閱讀更多 →</a>
                </div>
              </div>
            </article>
          ))}
        </div>

        {posts.length === 0 && (
          <div class="empty-state">
            <h2>尚無文章</h2>
            <p>我正在準備精彩的內容，敬請期待！</p>
          </div>
        )}
      </main>
    </div>
  </div>
</MainLayout>

<style>
  .page-header {
    text-align: center;
    margin-bottom: var(--spacing-md);
    padding: var(--spacing-sm) 0;
  }
  
  .page-header h1 {
    font-size: var(--font-size-3xl);
    margin-bottom: var(--spacing-sm);
  }
  
  .page-header p {
    font-size: var(--font-size-lg);
    color: var(--color-text-light);
    max-width: 600px;
    margin: 0 auto;
  }
  
  /* Featured Section */
  .featured-section {
    margin-bottom: var(--spacing-md);
  }
  
  .featured-section h2 {
    text-align: center;
    margin-bottom: var(--spacing-md);
    font-size: var(--font-size-xl);
  }
  
  .featured-posts {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: var(--spacing-2xl);
  }
  
  .featured-post {
    display: grid;
    grid-template-columns: 200px 1fr;
    gap: var(--spacing-lg);
    align-items: center;
  }
  
  .featured-image {
    height: 150px;
    overflow: hidden;
    border-radius: var(--border-radius);
  }
  
  .featured-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  /* Blog Layout */
  .blog-layout {
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: var(--spacing-xl);
  }
  
  /* Category Filter */
  .category-filter {
    display: flex;
    gap: var(--spacing-sm);
    margin-bottom: var(--spacing-lg);
    flex-wrap: wrap;
  }
  
  .filter-btn {
    padding: var(--spacing-sm) var(--spacing-lg);
    border: 2px solid var(--color-border);
    background-color: var(--color-bg);
    color: var(--color-text-light);
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 0.2s ease;
    font-weight: 500;
  }
  
  .filter-btn:hover,
  .filter-btn.active {
    border-color: var(--color-primary);
    background-color: var(--color-primary);
    color: white;
  }
  
  /* Posts Grid */
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: var(--spacing-2xl);
  }
  
  .post-card {
    display: grid;
    grid-template-columns: 200px 1fr;
    gap: var(--spacing-lg);
    align-items: start;
    transition: all 0.3s ease;
  }
  
  .post-card.hidden {
    display: none;
  }
  
  .post-image {
    height: 150px;
    overflow: hidden;
    border-radius: var(--border-radius);
  }
  
  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .post-card:hover .post-image img {
    transform: scale(1.05);
  }
  
  .post-content {
    padding: 0;
  }
  
  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-sm);
    font-size: var(--font-size-sm);
  }
  
  .post-category {
    background-color: var(--color-primary);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-weight: 500;
  }
  
  .post-content h2 {
    margin-bottom: var(--spacing-sm);
    font-size: var(--font-size-xl);
  }
  
  .post-content h2 a {
    color: var(--color-text);
    text-decoration: none;
  }
  
  .post-content h2 a:hover {
    color: var(--color-primary);
  }
  
  .post-content p {
    color: var(--color-text-light);
    margin-bottom: var(--spacing-lg);
  }
  
  .post-tags {
    display: flex;
    gap: var(--spacing-xs);
    flex-wrap: wrap;
    margin-bottom: var(--spacing-lg);
  }
  
  .tag {
    color: var(--color-text-light);
    font-size: var(--font-size-sm);
  }
  
  .post-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: var(--font-size-sm);
  }
  
  .post-author {
    color: var(--color-text-light);
  }
  
  .read-more {
    color: var(--color-primary);
    font-weight: 500;
  }
  
  /* Sidebar */
  .blog-sidebar {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-2xl);
  }
  
  .sidebar-widget {
    background-color: var(--color-bg-secondary);
    padding: var(--spacing-lg);
    border-radius: var(--border-radius-lg);
    border: 1px solid var(--color-border);
  }
  
  .sidebar-widget h3 {
    margin-bottom: var(--spacing-md);
    font-size: var(--font-size-lg);
    color: var(--color-text);
  }
  
  /* Search */
  .search-box {
    display: flex;
    gap: var(--spacing-xs);
  }
  
  .search-box input {
    flex: 1;
    padding: var(--spacing-sm);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    background-color: var(--color-bg);
    color: var(--color-text);
  }
  
  .search-box button {
    padding: var(--spacing-sm);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    background-color: var(--color-primary);
    color: white;
    cursor: pointer;
  }
  
  /* Category List */
  .category-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .category-list li {
    margin-bottom: var(--spacing-xs);
  }
  
  .category-list a {
    display: flex;
    justify-content: space-between;
    color: var(--color-text-light);
    text-decoration: none;
    padding: var(--spacing-xs) 0;
    border-bottom: 1px solid var(--color-border-light);
  }
  
  .category-list a:hover {
    color: var(--color-primary);
  }
  
  .count {
    color: var(--color-text-light);
    font-size: var(--font-size-sm);
  }
  
  /* Tag Cloud */
  .tag-cloud {
    display: flex;
    gap: var(--spacing-xs);
    flex-wrap: wrap;
  }
  
  .tag-link {
    background-color: var(--color-bg);
    color: var(--color-text-light);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    text-decoration: none;
    font-size: var(--font-size-sm);
    border: 1px solid var(--color-border);
    transition: all 0.2s ease;
  }
  
  .tag-link:hover {
    background-color: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
  }
  
  /* Recent Posts */
  .recent-posts {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .recent-posts li {
    margin-bottom: var(--spacing-md);
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--color-border-light);
  }
  
  .recent-posts li:last-child {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  
  .recent-posts a {
    text-decoration: none;
    color: var(--color-text);
  }
  
  .recent-title {
    display: block;
    font-weight: 500;
    margin-bottom: var(--spacing-xs);
    line-height: 1.3;
  }
  
  .recent-date {
    font-size: var(--font-size-sm);
    color: var(--color-text-light);
  }
  
  .recent-posts a:hover .recent-title {
    color: var(--color-primary);
  }
  
  /* Empty State */
  .empty-state {
    text-align: center;
    padding: var(--spacing-3xl) 0;
  }
  
  .empty-state h2 {
    margin-bottom: var(--spacing-md);
    color: var(--color-text-light);
  }
  
  .empty-state p {
    color: var(--color-text-light);
  }
  
  /* Responsive Design */
  @media (max-width: 1024px) {
    .blog-layout {
      grid-template-columns: 220px 1fr;
      gap: var(--spacing-lg);
    }
  }
  
  @media (max-width: 768px) {
    .blog-layout {
      grid-template-columns: 1fr;
      gap: var(--spacing-lg);
    }
    
    .blog-sidebar {
      order: 2;
    }
    
    .blog-main {
      order: 1;
    }
    
    .featured-posts {
      grid-template-columns: 1fr;
    }
    
    .featured-post,
    .post-card {
      grid-template-columns: 1fr;
      gap: var(--spacing-md);
    }
    
    .featured-image,
    .post-image {
      height: 200px;
    }
    
    .category-filter {
      overflow-x: auto;
      padding-bottom: var(--spacing-sm);
    }
    
    .filter-btn {
      white-space: nowrap;
    }
  }
</style>

<script>
  // 類別篩選功能
  document.addEventListener('DOMContentLoaded', () => {
    const filterBtns = document.querySelectorAll('.filter-btn');
    const postCards = document.querySelectorAll('.post-card');
    
    filterBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        const category = btn.getAttribute('data-category');
        
        // 更新按鈕狀態
        filterBtns.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');
        
        // 篩選文章
        postCards.forEach(card => {
          const cardCategory = card.getAttribute('data-category');
          if (category === 'all' || cardCategory === category) {
            card.classList.remove('hidden');
          } else {
            card.classList.add('hidden');
          }
        });
      });
    });
    
    // 簡單的搜尋功能
    const searchInput = document.getElementById('search-input');
    const searchBtn = document.getElementById('search-btn');
    
    function performSearch() {
      const searchTerm = searchInput.value.toLowerCase();
      
      postCards.forEach(card => {
        const title = card.querySelector('h2 a').textContent.toLowerCase();
        const description = card.querySelector('p').textContent.toLowerCase();
        
        if (title.includes(searchTerm) || description.includes(searchTerm)) {
          card.classList.remove('hidden');
        } else {
          card.classList.add('hidden');
        }
      });
      
      // 重置類別篩選
      filterBtns.forEach(b => b.classList.remove('active'));
      document.querySelector('[data-category="all"]').classList.add('active');
    }
    
    searchBtn.addEventListener('click', performSearch);
    searchInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        performSearch();
      }
    });
  });
</script> 